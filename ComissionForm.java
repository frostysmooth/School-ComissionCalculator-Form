/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package commissioncalculator;

import java.awt.Color;
import java.text.DecimalFormat;

/**
 *
 * @author Frostysmooth aka Justin Mirabal
 */
public class CommissionForm extends javax.swing.JFrame {
    
    //variables
    private String name1, name2, name3 = "";
    private int annualSalary = 40000;
    private double annualSales1, annualSales2, annualSales3 = 0;
    private double neededSales1, neededSales2, neededSales3 = 0;
    private double commissionRate = 0.08;
    private double accelerationFactor = 1.2;
    private double commission = 0;
    private double accelerationBonus = 0;
    private double totalAnnualCompenation = 0;
    
    DecimalFormat df = new DecimalFormat("#.00");
    

    /**
     * Creates new form CommissionForm
     */
    public CommissionForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_annualSales = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btn_calculate = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_results = new javax.swing.JTextArea();
        lbl_target = new javax.swing.JLabel();
        lbl_acc_factor = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_potential_totals = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        lbl_acc_factor2 = new javax.swing.JLabel();
        lbl_target2 = new javax.swing.JLabel();
        txt_name2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_annualSales2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_results_2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt_potential_totals_2 = new javax.swing.JTextArea();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_results_3 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbl_acc_factor3 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txt_potential_totals_3 = new javax.swing.JTextArea();
        lbl_target3 = new javax.swing.JLabel();
        txt_name3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_annualSales3 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Sales Associate #1:");

        txt_name.setPreferredSize(new java.awt.Dimension(150, 20));

        jLabel2.setText("Fixed Salary :  $40,000");

        jLabel3.setText("Annual Sales:  $");

        txt_annualSales.setPreferredSize(new java.awt.Dimension(75, 20));

        jLabel4.setText("Current Commission:  8% begins at 80% of Annual Sales ($48,000)");

        btn_calculate.setText("Calculate");
        btn_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calculateActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        txt_results.setEditable(false);
        txt_results.setColumns(20);
        txt_results.setRows(5);
        jScrollPane1.setViewportView(txt_results);

        lbl_target.setText("$60,000 Target");

        lbl_acc_factor.setText("Acceleration Factor when target is exceeded: 1.2");

        txt_potential_totals.setEditable(false);
        txt_potential_totals.setColumns(20);
        txt_potential_totals.setRows(5);
        jScrollPane2.setViewportView(txt_potential_totals);

        lbl_acc_factor2.setText("Acceleration Factor when target is exceeded: 1.2");

        lbl_target2.setText("$60,000 Target");

        txt_name2.setPreferredSize(new java.awt.Dimension(150, 20));

        jLabel5.setText("Sales Associate #2:");

        jLabel10.setText("Current Commission:  8% begins at 80% of Annual Sales ($48,000)");

        txt_annualSales2.setPreferredSize(new java.awt.Dimension(75, 20));

        jLabel11.setText("Annual Sales:  $");

        jLabel12.setText("Fixed Salary :  $40,000");

        txt_results_2.setEditable(false);
        txt_results_2.setColumns(20);
        txt_results_2.setRows(5);
        jScrollPane3.setViewportView(txt_results_2);

        txt_potential_totals_2.setEditable(false);
        txt_potential_totals_2.setColumns(20);
        txt_potential_totals_2.setRows(5);
        jScrollPane4.setViewportView(txt_potential_totals_2);

        txt_results_3.setEditable(false);
        txt_results_3.setColumns(20);
        txt_results_3.setRows(5);
        jScrollPane5.setViewportView(txt_results_3);

        jLabel13.setText("Annual Sales:  $");

        jLabel14.setText("Fixed Salary :  $40,000");

        lbl_acc_factor3.setText("Acceleration Factor when target is exceeded: 1.2");

        txt_potential_totals_3.setEditable(false);
        txt_potential_totals_3.setColumns(20);
        txt_potential_totals_3.setRows(5);
        jScrollPane6.setViewportView(txt_potential_totals_3);

        lbl_target3.setText("$60,000 Target");

        txt_name3.setPreferredSize(new java.awt.Dimension(150, 20));

        jLabel6.setText("Sales Associate #3:");

        txt_annualSales3.setPreferredSize(new java.awt.Dimension(75, 20));

        jLabel15.setText("Current Commission:  8% begins at 80% of Annual Sales ($48,000)");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Commission Information");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Potential Earnings");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addComponent(jSeparator4)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_annualSales3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_target3))
                            .addComponent(lbl_acc_factor3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_name3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_annualSales2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbl_target2))
                                    .addComponent(lbl_acc_factor2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_name2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_annualSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbl_target))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2)
                                    .addComponent(lbl_acc_factor)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_calculate)
                        .addGap(30, 30, 30)
                        .addComponent(btn_clear)
                        .addGap(33, 33, 33))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(309, 309, 309)
                .addComponent(jLabel8)
                .addGap(215, 215, 215))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_annualSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_target))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_acc_factor)
                        .addGap(23, 23, 23)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_name2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txt_annualSales2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_target2))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_acc_factor2))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_name3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txt_annualSales3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_target3))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_acc_factor3))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_clear)
                    .addComponent(btn_calculate))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    
    //handles button calculate press
    private void btn_calculateActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:       
        //name
        name1 = txt_name.getText().toString();
        name2 = txt_name2.getText().toString();
        name3 = txt_name3.getText().toString();
        
        
        //annual sales
        annualSales1 = Double.parseDouble(txt_annualSales.getText());
        annualSales2 = Double.parseDouble(txt_annualSales2.getText());
        annualSales3 = Double.parseDouble(txt_annualSales3.getText());
        
        //compares the annual sales and determines who had the most sales
        if ( annualSales1 > annualSales2 && annualSales1 > annualSales3 ){
            //System.out.println("Sales Person 1 is largest.");
            neededSales2 = annualSales1 - annualSales2;
            neededSales3 = annualSales1 - annualSales3;
            //System.out.println("Needed Sales 2:" + neededSales2);
            //System.out.println("Needed Sales 3:" + neededSales3);
        
        }else if ( annualSales2 > annualSales1 && annualSales2 > annualSales3 ){
            //System.out.println("Sales Person 2 is largest.");
            neededSales1 = annualSales2 - annualSales2;
            neededSales3 = annualSales2 - annualSales2;
            //System.out.println("Needed Sales 1:" + neededSales1);
            //System.out.println("Needed Sales 3:" + neededSales3);
         
        }else if ( annualSales3 > annualSales1 && annualSales3 > annualSales2 ){
            //System.out.println("Sales Person 3 is largest.");
            neededSales1 = annualSales3 - annualSales1;
            neededSales2 = annualSales3 - annualSales2;
            //System.out.println("Needed Sales 1:" + neededSales1);
            //System.out.println("Needed Sales 2:" + neededSales2);
         
        }else {  
            System.out.println("Entered numbers are not distinct.");
        }
        
        
        
        //clear potential totals text area because append was used in the loop
        txt_potential_totals.setText("");
        txt_potential_totals_2.setText("");
        txt_potential_totals_3.setText("");
        
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////SALES PERSON 1
        //set text to potential totals text area
        for(double j = annualSales1; j<= (annualSales1 * 1.5); j+= 5000.0 ) {
                //System.out.println("Total Sales:  " + j + "\r\n");
                txt_potential_totals.append("Total Sales:  " + df.format(j) + 
                        "   Total Compensation<<" +  df.format(calculatePotentialCompensation(j)) + ">> " + "\r\n");
        }
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////SALES PERSON 2
        //set text to potential totals text area
        for(double j = annualSales2; j<= (annualSales2 * 1.5); j+= 5000.0 ) {
                //System.out.println("Total Sales:  " + j + "\r\n");
                txt_potential_totals_2.append("Total Sales:  " + df.format(j) + 
                        "   Total Compensation<<" +  df.format(calculatePotentialCompensation(j)) + ">> " + "\r\n");
        }
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////SALES PERSON 3
        //set text to potential totals text area
        for(double j = annualSales2; j<= (annualSales3 * 1.5); j+= 5000.0 ) {
                //System.out.println("Total Sales:  " + j + "\r\n");
                txt_potential_totals_3.append("Total Sales:  " + df.format(j) + 
                        "   Total Compensation<<" +  df.format(calculatePotentialCompensation(j)) + ">> " + "\r\n");
        }
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////SALES PERSON 1
        //< 48000 gets no commission
        if(annualSales1 < 48000){            
            //set results to text area
            txt_results.setText("Name:  " + name1 + "\r\n" +
                    "Annual Salary:  " + "$40,000" + "\r\n" +
                    "Annual Sales:  $" + df.format(annualSales1) + "\r\n" + "\r\n" +
                    "Commission Rate:  " + "80% of annual sales target not met" + "\r\n" +
                    "Commission Earned:  $" + df.format(calculateCommission1(commissionRate, annualSales1)) + "\r\n" + "\r\n" +
                    "Total Annual Compensation:  $" + df.format(calculateAnnualCompenation()) + "\r\n" +
                    "Needed Sales to match or become top sales person:  $" + df.format(neededSales1)
                    );
            
        //>= 48000 && < 60000 gets the 8% commission    
        }else if (annualSales1 >=48000 && annualSales1 < 60000){
            //set results to text area
            txt_results.setText("Name:  " + name1 + "\r\n" +
                    "Annual Salary:  " + "$40,000" + "\r\n" +
                    "Annual Sales:  $" + df.format(annualSales1) + "\r\n" + "\r\n" +
                    "Commission Rate:  " + "8% of annual sales" + "\r\n" +
                    "Commission Earned:  $" + df.format(calculateCommission1(commissionRate, annualSales1)) + "\r\n" + "\r\n" +
                    "Total Annual Compensation:  $" + df.format(calculateAnnualCompenation()) + "\r\n" + 
                    "Needed Sales to match or become top sales person:  $" + df.format(neededSales1)
                    );         
            
        }else//> 60,000 gets 8% commission + acceleration factor (1.2)              
            //set results to text area
            txt_results.setText("Name:  " + name1 + "\r\n" +
                    "Annual Salary:  " + "$40,000" + "\r\n" +
                    "Annual Sales:  $" + df.format(annualSales1) + "\r\n"  + "\r\n" +
                    "Commission Rate:  " + "8% of annual sales" + "\r\n" +
                    "Commission Earned:  $" + df.format(calculateCommission1(commissionRate, annualSales1)) + "\r\n" +
                    "1.2 Acceleration Bonus:  $" + df.format(accelerationBonus) + "\r\n" + "\r\n" +
                    "Total Annual Compensation:  $" + df.format(calculateAnnualCompenation()) + "\r\n" + 
                    "Needed Sales to match or become top sales person:  $" + df.format(neededSales1)
                    );
        
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////SALES PERSON 2
        //< 48000 gets no commission
        if(annualSales2 < 48000){            
            //set results to text area
            txt_results_2.setText("Name:  " + name2 + "\r\n" +
                    "Annual Salary:  " + "$40,000" + "\r\n" +
                    "Annual Sales:  $" + df.format(annualSales2) + "\r\n" + "\r\n" +
                    "Commission Rate:  " + "80% of annual sales target not met" + "\r\n" +
                    "Commission Earned:  $" + df.format(calculateCommission2(commissionRate, annualSales2)) + "\r\n" + "\r\n" +
                    "Total Annual Compensation:  $" + df.format(calculateAnnualCompenation()) + "\r\n" + 
                    "Needed Sales to match or become top sales person:  $" + df.format(neededSales2)
                    );
            
        //>= 48000 && < 60000 gets the 8% commission    
        }else if (annualSales2 >=48000 && annualSales2 < 60000){
            //set results to text area
            txt_results_2.setText("Name:  " + name2 + "\r\n" +
                    "Annual Salary:  " + "$40,000" + "\r\n" +
                    "Annual Sales:  $" + df.format(annualSales2) + "\r\n" + "\r\n" +
                    "Commission Rate:  " + "8% of annual sales" + "\r\n" +
                    "Commission Earned:  $" + df.format(calculateCommission2(commissionRate, annualSales2)) + "\r\n" + "\r\n" +
                    "Total Annual Compensation:  $" + df.format(calculateAnnualCompenation()) + "\r\n" + 
                    "Needed Sales to match or become top sales person:  $" + df.format(neededSales2)
                    );         
            
        }else//> 60,000 gets 8% commission + acceleration factor (1.2)              
            //set results to text area
            txt_results_2.setText("Name:  " + name2 + "\r\n" +
                    "Annual Salary:  " + "$40,000" + "\r\n" +
                    "Annual Sales:  $" + df.format(annualSales2) + "\r\n"  + "\r\n" +
                    "Commission Rate:  " + "8% of annual sales" + "\r\n" +
                    "Commission Earned:  $" + df.format(calculateCommission2(commissionRate, annualSales2)) + "\r\n" +
                    "1.2 Acceleration Bonus:  $" + df.format(accelerationBonus) + "\r\n" + "\r\n" +
                    "Total Annual Compensation:  $" + df.format(calculateAnnualCompenation()) + "\r\n" + 
                    "Needed Sales to match or become top sales person:  $" + df.format(neededSales2)
                    );
        
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////SALES PERSON 3
        //< 48000 gets no commission
        if(annualSales3 < 48000){            
            //set results to text area
            txt_results_3.setText("Name:  " + name3 + "\r\n" +
                    "Annual Salary:  " + "$40,000" + "\r\n" +
                    "Annual Sales:  $" + df.format(annualSales3) + "\r\n" + "\r\n" +
                    "Commission Rate:  " + "80% of annual sales target not met" + "\r\n" +
                    "Commission Earned:  $" + df.format(calculateCommission3(commissionRate, annualSales3)) + "\r\n" + "\r\n" +
                    "Total Annual Compensation:  $" + df.format(calculateAnnualCompenation()) + "\r\n" + 
                    "Needed Sales to match or become top sales person:  $" + df.format(neededSales3)
                    );
            
        //>= 48000 && < 60000 gets the 8% commission    
        }else if (annualSales3 >=48000 && annualSales3 < 60000){
            //set results to text area
            txt_results_3.setText("Name:  " + name3 + "\r\n" +
                    "Annual Salary:  " + "$40,000" + "\r\n" +
                    "Annual Sales:  $" + df.format(annualSales3) + "\r\n" + "\r\n" +
                    "Commission Rate:  " + "8% of annual sales" + "\r\n" +
                    "Commission Earned:  $" + df.format(calculateCommission3(commissionRate, annualSales3)) + "\r\n" + "\r\n" +
                    "Total Annual Compensation:  $" + df.format(calculateAnnualCompenation()) + "\r\n" + 
                    "Needed Sales to match or become top sales person:  $" + df.format(neededSales3)
                    );         
            
        }else//> 60,000 gets 8% commission + acceleration factor (1.2)              
            //set results to text area
            txt_results_3.setText("Name:  " + name3 + "\r\n" +
                    "Annual Salary:  " + "$40,000" + "\r\n" +
                    "Annual Sales:  $" + df.format(annualSales3) + "\r\n"  + "\r\n" +
                    "Commission Rate:  " + "8% of annual sales" + "\r\n" +
                    "Commission Earned:  $" + df.format(calculateCommission3(commissionRate, annualSales3)) + "\r\n" +
                    "1.2 Acceleration Bonus:  $" + df.format(accelerationBonus) + "\r\n" + "\r\n" +
                    "Total Annual Compensation:  $" + df.format(calculateAnnualCompenation()) + "\r\n" + 
                    "Needed Sales to match or become top sales person:  $" + df.format(neededSales3)
                    );
        
    }                                             

    
    //clear contents in text boxes
    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        txt_name.setText("");
        txt_name2.setText("");
        txt_name3.setText("");
        
        
        txt_annualSales.setText("");
        txt_annualSales2.setText("");
        txt_annualSales3.setText("");
        
        
        txt_results.setText("");
        txt_results_2.setText("");
        txt_results_3.setText("");
        
        
        txt_potential_totals.setText("");
        txt_potential_totals_2.setText("");
        txt_potential_totals_3.setText("");
        
        
        //reset label colors back to normal
        lbl_target.setForeground(Color.BLACK);
        lbl_target2.setForeground(Color.BLACK);
        lbl_target3.setForeground(Color.BLACK);
        
        
        lbl_acc_factor.setForeground(Color.BLACK);
        lbl_acc_factor2.setForeground(Color.BLACK);
        lbl_acc_factor3.setForeground(Color.BLACK);
    }                                         

    
    //method for calculating annual compensation
    private double calculateAnnualCompenation(){
        totalAnnualCompenation = (commission + annualSalary + accelerationBonus);
        
        return totalAnnualCompenation;
    }
    
   
    
    //method used for calculating potential annual compensation
    private double calculatePotentialCompensation(double potentialSales){
        
        double potentialCompensation;
        
        /*< 48000 gets no commission
         * > 48000 & < 60000 gets 8% commission
         * > 60000 gets 8% commission + acceleration factor (1.2)
         */
        if(potentialSales < 48000){
            potentialCompensation = annualSalary;
        }else if (potentialSales >= 48000 && potentialSales < 60000){
            potentialCompensation = (annualSalary + (potentialSales * commissionRate));
        }else{
            potentialCompensation = (annualSalary + (potentialSales * commissionRate) * 1.2);
            
        }
        
        return potentialCompensation;
    }
    
    //method for calculating commission for sales person 1
    private double calculateCommission1(double cRate, double aSales){
                
        commission = 0;
        
        //80% of sales target met initiate sales incentive (commission)
        if(annualSales1 >= 48000 && annualSales1 < 60000){
            commission = (aSales * cRate);
            
            lbl_target.setForeground(Color.GREEN);
            
            return commission;            
        }
        
         //sales target me initiate acceleration factor
        if(annualSales1 >= 60000){
            commission = (aSales * cRate);// * accelerationFactor;
            
            calculateAccelerationBonus(commission);
            
            lbl_target.setForeground(Color.GREEN);
            lbl_acc_factor.setForeground(Color.GREEN);            
            
            return commission;
        }else
        
            return commission;
    }
    
    
    //method for calculating commission for sales person 2
    private double calculateCommission2(double cRate, double aSales){
                
        commission = 0;
        
        //80% of sales target met initiate sales incentive (commission)
        if(annualSales2 >= 48000 && annualSales2 < 60000){
            commission = (aSales * cRate);
            
            lbl_target2.setForeground(Color.GREEN);
            
            return commission;            
        }
        
         //sales target me initiate acceleration factor
        if(annualSales2 >= 60000){
            commission = (aSales * cRate);// * accelerationFactor;
            
            calculateAccelerationBonus(commission);
            
            lbl_target2.setForeground(Color.GREEN);
            lbl_acc_factor2.setForeground(Color.GREEN);            
            
            return commission;
        }else
        
            return commission;
    }
    
    
    //method for calculating commission for sales person 3
    private double calculateCommission3(double cRate, double aSales){
                
        commission = 0;
        
        //80% of sales target met initiate sales incentive (commission)
        if(annualSales3 >= 48000 && annualSales3 < 60000){
            commission = (aSales * cRate);
            
            lbl_target3.setForeground(Color.GREEN);
            
            return commission;            
        }
        
         //sales target me initiate acceleration factor
        if(annualSales3 >= 60000){
            commission = (aSales * cRate);// * accelerationFactor;
            
            calculateAccelerationBonus(commission);
            
            lbl_target3.setForeground(Color.GREEN);
            lbl_acc_factor3.setForeground(Color.GREEN);            
            
            return commission;
        }else
        
            return commission;
    }
    
   
    
    //method for calculating the acceleration bonus only
    private double calculateAccelerationBonus(double comm){
        
        accelerationBonus = comm * 0.2;
        
        return accelerationBonus;
    }
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CommissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CommissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CommissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CommissionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CommissionForm().setVisible(true);
            }
        });
    }
    
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton btn_calculate;
    private javax.swing.JButton btn_clear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lbl_acc_factor;
    private javax.swing.JLabel lbl_acc_factor2;
    private javax.swing.JLabel lbl_acc_factor3;
    private javax.swing.JLabel lbl_target;
    private javax.swing.JLabel lbl_target2;
    private javax.swing.JLabel lbl_target3;
    private javax.swing.JTextField txt_annualSales;
    private javax.swing.JTextField txt_annualSales2;
    private javax.swing.JTextField txt_annualSales3;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_name2;
    private javax.swing.JTextField txt_name3;
    private javax.swing.JTextArea txt_potential_totals;
    private javax.swing.JTextArea txt_potential_totals_2;
    private javax.swing.JTextArea txt_potential_totals_3;
    private javax.swing.JTextArea txt_results;
    private javax.swing.JTextArea txt_results_2;
    private javax.swing.JTextArea txt_results_3;
    // End of variables declaration                   
}
